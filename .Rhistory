library(flexdashboard) # always
readRDS("plot1_a.rds")
readRDS("plot1_b.rds")
readRDS("plot1_b.rds")
readRDS("plot2_a.rds")
readRDS("plot2_b.rds")
readRDS("plot3_b.rds")
library(flexdashboard) # always
readRDS("https://github.com/meade68/DACSS_603D_Week04_HW1/blob/3b5b29772cab46fa3aa8834e37e9ba013ca3fc5d/plot1_a.rds")
readRDS("https://github.com/meade68/DACSS_603D_Week04_HW1/blob/3b5b29772cab46fa3aa8834e37e9ba013ca3fc5d/plot1_a.rds")
readRDS("https://github.com/meade68/DACSS_603D_Week04_HW1/blob/3b5b29772cab46fa3aa8834e37e9ba013ca3fc5d/plot1.rds")
readRDS("https://github.com/meade68/DACSS_603D_Week04_HW1/blob/3b5b29772cab46fa3aa8834e37e9ba013ca3fc5d/plot1.rds")
library(flexdashboard) # always
readRDS(url("https://github.com/meade68/DACSS_603D_Week04_HW1/blob/3b5b29772cab46fa3aa8834e37e9ba013ca3fc5d/plot1_a.rds"))
readRDS(url("https://github.com/meade68/DACSS_603D_Week04_HW1/blob/3b5b29772cab46fa3aa8834e37e9ba013ca3fc5d/plot1_a.rds"))
readRDS(url("https://github.com/meade68/DACSS_603D_Week04_HW1/raw/refs/heads/main/plot1_a.rds"))
readRDS(url("https://github.com/meade68/DACSS_603D_Week04_HW1/raw/refs/heads/main/plot2_b.rds"))
readRDS(url("https://github.com/meade68/DACSS_603D_Week04_HW1/raw/refs/heads/main/plot3_b.rds"))
rm(list = ls())
Link="https://github.com/meade68/DACSS_603D_Week04_HW1/raw/0e172a33a3842ccd5c0ac9c71e15097a3b1aa9a6/EUROPE_3035.gpkg"
library(sf)
st_layers(Link)
DOT_DENSITY <- st_read(Link, layer = "DOT_DENSITY")
BASEMAP <- st_read(Link, layer = "BASEMAP")
CHOROPLETH <- st_read(Link, layer = "CHOROPLETH")
PROP_SYMBOL <- st_read(Link, layer = "PROP_SYMBOL")
st_crs(PROP_SYMBOL)$epsg
library(ggplot2)
library(scales)
ggplot() + theme_light() +
#call map
geom_sf(data = BASEMAP) +
# adjust datum
coord_sf(datum = st_crs(BASEMAP)) +
# custom X and Y axes
scale_x_continuous(labels = label_number(scale = 1/1000, suffix = " km")) +
scale_y_continuous(labels = label_number(scale = 1/1000, suffix = " km")) +
labs(x = "Easting", y = "Northing") #labels
plot1_a=ggplot() + theme_light() +
#base
geom_sf(data = BASEMAP,fill="white",color="grey80") +
# layer
geom_sf(data=DOT_DENSITY,
alpha=0.1,#transparency
shape=20,
size=0.5,
color="blue")+
coord_sf(datum = st_crs(BASEMAP)) +
# custom X and Y axes
scale_x_continuous(labels = label_number(scale = 1/1000, suffix = " km")) +
scale_y_continuous(labels = label_number(scale = 1/1000, suffix = " km")) +
labs(x = "Easting", y = "Northing") #labels
plot1_a
library(leaflet)
# needs geographic CRS
DOT_DENSITY<- st_cast(DOT_DENSITY,'POINT' )
ddm_4326 <- st_transform(DOT_DENSITY, crs = 4326)
leaflet() %>%
addTiles() %>%  # base map
addCircleMarkers(data = ddm_4326,
color="blue",
stroke=0,
radius = 0.01,
opacity = 0.1)
plot1_b=leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)  %>%  # names in english
addCircleMarkers(data = ddm_4326,
color="blue",
stroke=0,
radius = 0.01,
opacity = 0.1)
plot1_b
BASEMAP<-st_transform(BASEMAP, crs = 4326)
plot2_a=ggplot() + theme_light() +
#base
geom_sf(data = BASEMAP,fill="white",color="grey80") +
# layer
geom_sf(data=PROP_SYMBOL,
shape=20,
aes(size=size))+
scale_size_area(
name = "Mobiles per Person", # Name for the legend
max_size = 20) +       # This defines the maximum *radius*
guides(color="none") +
coord_sf(datum = st_crs(BASEMAP)) +
# custom X and Y axes
scale_x_continuous(labels = label_number(scale = 1/1000, suffix = " km")) +
scale_y_continuous(labels = label_number(scale = 1/1000, suffix = " km")) +
labs(x = "Easting", y = "Northing") #labels
plot2_a
# CRS for leaflet
psm_4326 <- st_transform(PROP_SYMBOL, crs = 4326)
plot2_b=leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)  %>%
addCircleMarkers(data = psm_4326,
# fillColor = "red",
# stroke = T, #border
# color="red", #border color
# fillOpacity = 1,
label = ~Country,
radius = ~size)
plot2_b
plot3_a=ggplot() + theme_light() +
#base
geom_sf(data=choro_4326,
aes(fill=mobiles_pcapita_FJ5_cat))+
coord_sf(datum = st_crs(BASEMAP)) +
scale_fill_brewer(direction = 1,palette = 'RdBu') +
scale_x_continuous(labels = label_number(scale = 1/1000, suffix = " km")) +
scale_y_continuous(labels = label_number(scale = 1/1000, suffix = " km")) +
labs(x = "Easting", y = "Northing",fill="Pop Density")
